{% comment %}
  Renders a product card

  Accepts:
  - card_product: {Object} Product Liquid object (optional)
  - section_id: {String} The ID of the section that contains this card.

  Usage:
  {% render 'card-product'%}

  TODOS:
  - Make link to product page stright to variant selected
  - Add loading state for image change
  - lighthouse ada performance audit
{% endcomment %}

<article class="flex flex-col pt-5 px-7 pb-9 w-[370px]" id="{{ card_product.id }}">
        <a href="#" class="relative block w-[315px] h-[340px] border border-gray-task overflow-hidden group">
            <img 
                src="{{ card_product | image_url }}" 
                width="315px" 
                height="340px" 
                alt="{{ card_product.title }}" 
                class="z-20 w-full h-full object-cover card-product-image"
            />
            <img
                src="{{ card_product | image_url }}" 
                width="315px" 
                height="340px" 
                alt="{{ card_product.title }}" 
                class="absolute top-0 left-0 z-50 w-full h-full object-cover opacity-0 group-hover:opacity-100 transition-opacity duration-200 card-product-secondary-image"
            />
            
            {% if card_product.compare_at_price > card_product.price %}
                <p class="text-base font-semibold text-red-task absolute top-5 left-5 border border-red-task py-1.5 px-3 rounded-3xl z-50">On Sale!</p>
            {% endif %} 
        </a>

        {% if card_product.variants.size > 0  %}
            <fieldset class="flex gap-2 my-4">
                {% for variant in card_product.variants %}
                    <input
                        type="radio"
                        value="{{ variant.id }}"
                        id="{{ variant.id }}"
                        name="{{ card_product.id }}"
                        class="tshirt-selector"
                    />
                    <label for="{{ variant.id }}" class="w-6 h-6 rounded-full relative right-[20px] mr-[-20px] cursor-pointer" style="background-color: {{ variant.option1 | downcase }};"></label>
                {% endfor %}
            </fieldset>
        {% endif %}



        <p>{{ card_product.vendor }}</p>
        <a href="#">
            <p class="text-blue-task">{{ card_product.title }}</p>
        </a>
        <div class="flex gap-2">
            {% if card_product.compare_at_price != blank and card_product.compare_at_price > card_product.price%}
                <p class="line-through">{{ card_product.compare_at_price | money}}</p>
                <p class="text-red-task">{{ card_product.price | money}}</p>                    
            {% else %}
                <p class="">{{ card_product.price | money}}</p>
            {% endif %}
        </div>
</article>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        console.log({{ card_product | json }});
        const cardArticle = document.getElementById('{{ card_product.id }}');
        const featuredImgElement = cardArticle.querySelector('.card-product-image');
        const secondaryImgElement = cardArticle.querySelector('.card-product-secondary-image');
        const swatchButtons = cardArticle.querySelectorAll('input.tshirt-selector');
        let variantMap = {};
        let featuredImgIndex = 0;

        updateSecondaryImage(featuredImgIndex);

        const variants = {{ card_product.variants | json }};
        if (variants.length === 0) {
            return;
        }

        // create map of variant IDs to image URLs
        variants.forEach(variant => {
            if (variant.featured_image) {
                variantMap[variant.id] = variant.featured_image.src;
            }
        });

        swatchButtons.forEach(button => {
            button.addEventListener('change', function(event) {
                const variantId = event.target.value;
                const newImageSrc = variantMap[variantId];

                // TODO: Add loading state if possible
                if (newImageSrc) {
                    featuredImgElement.src = newImageSrc;
                    featuredImgIndex = {{ card_product.images | json }}.indexOf(newImageSrc);
                    updateSecondaryImage(featuredImgIndex);
                }
            });
        });

        function updateSecondaryImage(index) {
            const secondaryImgUrl = {{ card_product.images | json }}[featuredImgIndex + 1];

            if (secondaryImgUrl) {
                secondaryImgElement.src = secondaryImgUrl;
            }
        }
    });

</script>
